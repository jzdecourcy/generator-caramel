@{
	var id = (object)null;
	
	var idMetadata =
		this.
			ViewData.
			ModelMetadata.
			Properties.
			Where(m => m.PropertyName == "ID").
			FirstOrDefault();

	if (idMetadata != null)
	{
		id = idMetadata.Model;
	}

	var index = this.ViewData.TemplateInfo.HtmlFieldPrefix.LastIndexOf('.');

	if (index >= 0)
	{
		this.ViewData.TemplateInfo.HtmlFieldPrefix = String.Format("{0}{1}]", this.ViewData.TemplateInfo.HtmlFieldPrefix.Substring(0, index), this.ViewData.TemplateInfo.HtmlFieldPrefix.Substring(index + 1, this.ViewData.TemplateInfo.HtmlFieldPrefix.Length - index - 2));
	}
}
<tr data-id="@(id)">
@foreach (var property in this.ViewData.ModelMetadata.Properties.Where(p => p.ShowForDisplay && !this.ViewData.TemplateInfo.Visited(p))) {
	<td>
		@{
			var templateName = "Table.Row.Cell";
			var templateCandidateNames = new List<string>();

			if (!String.IsNullOrWhiteSpace(property.TemplateHint))
			{
				templateCandidateNames.Add(String.Format("{0}.{1}", templateName, property.TemplateHint));
			}

			if (!String.IsNullOrWhiteSpace(property.DataTypeName))
			{
				templateCandidateNames.Add(String.Format("{0}.{1}", templateName, property.DataTypeName));
			}

			templateCandidateNames.Add(String.Format("{0}.{1}", templateName, (Nullable.GetUnderlyingType(property.ModelType) ?? property.ModelType).Name));

			foreach (var templateCandidateName in templateCandidateNames)
			{
				var fullTemplateCandidateName = "DisplayTemplates" + "/" + templateCandidateName;

				if (ViewEngines.Engines.FindPartialView(this.Html.ViewContext, fullTemplateCandidateName).View != null)
				{
					templateName = templateCandidateName;

					break;
				}
			}
		}
		@(this.Html.Display(property.PropertyName, templateName, new { ID = id, Model = this.Model }))
	</td>
}
</tr>
